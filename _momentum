#!/bin/bash

# M O M E N T U M

# Usage: _momentum -t TEXTTOPLOT -v VERSION -l LINE -p
# Plot text in circle at set size using vpype and axicli

# arguments

while getopts t:v:l:p opts; do
   case ${opts} in
      t) TEXT=${OPTARG} ;;
      v) VERSION=${OPTARG} ;;
      l) LINE=${OPTARG} ;;
      p) PLOT=true ;;
   esac
done

# echo $TEXT
# echo $VERSION
# echo $PLOT

# VERSION 0 --> logo  ** flag not implemented todo **
# VERSION 1 --> poster 1
# VERSION 2 --> poster 2
# VERSION 3 --> poster 3
# VERSION 4 --> poster 4

# init

ORIGIN="0 0"
CMD='vpype '
OUT='out.svg'

if [ "$VERSION" == "1" ]; then

    Y=0
    # SIZE=50       # MOMENTUM LOGO
    SIZE=284        # MOMENTUM POSTER 1 

    # text

    if [[ -z "$TEXT" ]]; then
        case $LINE in
            1) TEXT='ALEXANDRAWAIERSTALL' ;;
            2) TEXT='DISCOTECAFLAMINGSTAR' ;;
            3) TEXT='OCTOBER1314152023' ;;
            4) TEXT='DAILY12TO4PM' ;;
        esac
    fi

    # calculate circle

    # size of circle (X) based on CHARS
    # so always the same size type and same spacing
    # but circle changes size
    # height of each letter should be type size
    # add them all up and get circumference
    # from circumference, get radius
    # C = 2 * PI * R, R = C / (2 * PI)

    CHARS=${#TEXT}
    ROTATE=-`bc -l <<< "360 / $CHARS"`
    PI=3.14159265358979323846264338327950288419716939937510
    SIZE_ADJ=41      # adjust letterspacing with $RADIUS    
    CIRCUM=`bc -l <<< "($SIZE - $SIZE_ADJ) * $CHARS"`
    RADIUS=`bc -l <<< "$CIRCUM / (2 * $PI)"`
    X=$RADIUS

    foo=$TEXT
    for (( i=0; i<${#foo}; i++ )); do
        echo "${foo:$i:1}"
        TEXT="${foo:$i:1}"
        CMD+='text --align center --size '$SIZE' --position '$X' '$Y' "'$TEXT'" rotate --origin 0 0 -- '$ROTATE' '
    done

    # layout

    case $LINE in
        1) CMD+='layout --fit-to-margins 0.25in --align left --landscape 11x17in ' ;;
        2) CMD+='layout --fit-to-margins 0.25in --align left --landscape 11x17in ' ;;  
        3) CMD+='layout --fit-to-margins 1.5in --align left --landscape 11x17in ' ;; 
        4) CMD+='layout --fit-to-margins 3.0in --align left --landscape 11x17in ' ;;
    esac
fi

if [ "$VERSION" == "2" ]; then

    echo 'version '$VERSION
    SIZE=284
    if [ "$LINE" == "1" ]; then
        TEXT='HAUSCHKA'
        W=6in
        H=16in
        X=0
        Y=810
    fi
    if [ "$LINE" == "2" ]; then
        TEXT='FEBRUARY2420241PM'
        W=9in
        H=7in
        X=-920
        Y=370
    fi    
    if [ "$LINE" == "3" ]; then
        TEXT='YINGYUNCHENG,'
        TEXT2='SCOTTJENNINGS'
        W=7in
        H=9in
        X=-375
        Y=365
        X2=-375
        Y2=560
        CMD+='text --align left --size '$SIZE' --position '$X2' '$Y2' "'$TEXT2'" '
    fi

    CMD+='text --align left --size '$SIZE' --position '$X' '$Y' "'$TEXT'" '
    CMD+='scaleto --fit-dimensions '$W' '$H' '
    CMD+='pagesize tabloid '
    # CMD+='layout --fit-to-margins .25in --landscape tabloid '
fi

if [ "$VERSION" == "3" ]; then

    # text
    if [[ -z "$TEXT" ]]; then
        case $LINE in
            1) 
            TEXT='MAY10202412PM' 
            PI_OFFSET=1.0 
            ;;
            2) 
            TEXT='MAY12202412PM' 
            PI_OFFSET=0.0 
            ;;
        esac
    fi

    # calculate sine wave
    # Y = sin(X) (X & Y in radians)
    # then get tangent by calc slope
    # and arctan(slope) to get degrees

    # parameters
    SIZE=0.6
    PI=3.14159265
    FREQUENCY=1.0
    AMPLITUDE=0.25
    PERIOD=6.28318531
    SCALE=1.25
    # PI_OFFSET=0.0     # set above by line
    
    # constants
    X=$(echo "$PI_OFFSET * $PI" | bc -l)
    Y=$(echo "$AMPLITUDE * s($X * $FREQUENCY)" | bc -l)
    _X=$X       # previous X
    _Y=$Y       # previous Y 
    LAYER=0
    STEP=$(echo "$PI / 7" | bc -l)  

    foo=$TEXT
    for (( i=0; i<${#foo}; i++ )); do
        ((LAYER++))
        TEXT="${foo:$i:1}"

        # increment X
        X=$(echo "$X + ($STEP * $SCALE)" | bc -l)

        # nudge if 'A' for kerning
        if [[ "$TEXT" = "A" ]]; then
            _X=$(echo "($_X * 1.025)" | bc -l)
        fi

        # calculate Y using sin(X)
        Y=$(echo "$AMPLITUDE * s($X * $FREQUENCY)" | bc -l)

        # calculate slope 
        M=$(echo "($Y - $_Y) / ($X - $_X)" | bc -l)
  
        # calculate slope in degrees using arctan(M)
        ROTATE=$(echo "(a($M) * 180 / $PI)" | bc -l)
        # ROTATE=0

        echo
        echo "${foo:$i:1}"
        echo "LAYER: "$LAYER
        echo "_X: "$_X
        echo "_Y: "$_Y
        echo "X: "$X
        echo "Y: "$Y
        echo "M: "$M
        echo "R: "$ROTATE

        CMD+='text --align left --size '$SIZE' --position '$_X' '$_Y' --layer '$LAYER' "'$TEXT'" rotate --layer '$LAYER' -- '$ROTATE' '
        # CMD+='line --layer '$LAYER' '$X' '$Y' '$_X' '$_Y' '

        _X=$X
        _Y=$Y
    done

    # layout

    CMD+='color blue '
    CMD+='layout --fit-to-margins 0.25in --align left --landscape 11x17in '
fi

if [ "$VERSION" == "4" ]; then

    echo 'version '$VERSION

    # VERSION 4 --> current time

    CMD='vpype '

    # set font size and initial positions
    SIZE=24
    X=0
    Y=0

    TIME=("$(date "+%Y%m%d %H:%M:%S %z" | sed 's/\(.*\)\([+-][0-9][0-9]\)[0-9][0-9]$/\1GMT\2/')")
    # add a text command for the time
    CMD+='text --align left --size '$SIZE' --position '$X' '$Y' "'$TIME'" '

    # layout
    CMD+='color orange '
    CMD+='layout --fit-to-margins 0.25in --landscape 11x17in '
fi

# svg output

CMD+='linemerge '
CMD+='write '$OUT

# print

# echo $CHARS
# echo $CIRCUM
# echo $RADIUS
eval $CMD
# open out.svg
# cp out.svg out-$LINE.svg
# open out-$LINE.svg
open -a Safari out.svg
if [[ -n "$PLOT" ]]; then
    echo "PLOTTING ..."
    axicli out.svg --model 2
fi
exit
